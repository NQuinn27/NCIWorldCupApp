/*
 * WorldCupApp
 * liveModule.java
 * 
 * Created by Niall Quinn on Mar 8, 2014
 * This Project is created for NCI Object-Oriented Programming Year 1, Group Assignment.
 * Copyright (c) Niall Quinn, Jonathan James Turner, James Walsh, John O'Shea. All rights reserved.
 * 
 */

/*
Live Module:
    Show the current status of any live game;
    Information will be gleaned from an XML file, which will be updated on 
    server. Ideally, i wish to create a faux-live environment by implementing 
    a regular timer-fire method to refresh the xml stream from the server.
*/

package nci.OOPGroup03;

import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;

/**
 *
 * @author Niall Quinn
 */
public class liveModule extends javax.swing.JPanel {

    /**
     * Creates new form liveModule
     */
    public liveModule() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Team2Name = new javax.swing.JLabel();
        teamTwoScore = new javax.swing.JLabel();
        teamOneScore2 = new javax.swing.JLabel();
        teamOneScore = new javax.swing.JLabel();
        Team1Name = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(632, 432));

        Team2Name.setFont(new java.awt.Font("Lucida Grande", 0, 56)); // NOI18N
        Team2Name.setText("Team2");

        teamTwoScore.setFont(new java.awt.Font("Lucida Grande", 0, 72)); // NOI18N
        teamTwoScore.setText("0");

        teamOneScore2.setFont(new java.awt.Font("Lucida Grande", 0, 72)); // NOI18N
        teamOneScore2.setText(":");
        teamOneScore2.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                teamOneScore2ComponentAdded(evt);
            }
        });

        teamOneScore.setFont(new java.awt.Font("Lucida Grande", 0, 72)); // NOI18N
        teamOneScore.setText("0");

        Team1Name.setFont(new java.awt.Font("Lucida Grande", 0, 56)); // NOI18N
        Team1Name.setText("Team1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(Team1Name)
                .addGap(44, 44, 44)
                .addComponent(teamOneScore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(teamOneScore2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(teamTwoScore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Team2Name)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Team1Name)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(teamTwoScore, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(teamOneScore2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(teamOneScore, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(Team2Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Player Name\t\tTime");
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("Player Name\t\tTime");
        jScrollPane2.setViewportView(jTextArea2);

        jButton1.setText("?");
        jButton1.setActionCommand("command1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(298, 298, 298)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void teamOneScore2ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_teamOneScore2ComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_teamOneScore2ComponentAdded

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Began to implement the xml parsing, "
                + "click refresh and see the Teams and scores refresh from local file");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.parseXML();    
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void parseXML(){
        /*
            Here I am parsing from an XML File,
            using Dom4J framework. 
            the file (test.xml) is setup so it holds info for the current game
            On parsing from the file I will populate the fields for:
            Teams, scores, goals scored and players who scored.
            Running tight on time, this will be fully implemented next week.
            This file will not be a local file, but a downloaded stream from 
            server
        */
        String xmlPath = "test.xml";
        try {
            SAXReader reader = new SAXReader();
            Document document = reader.read(xmlPath);
            Element rootElement = document.getRootElement();
            System.out.println("Root Element: "+rootElement.getName());
            
            for ( Iterator i = rootElement.elementIterator(); i.hasNext(); ) {
                Element element = (Element) i.next();
                System.out.println(element.getName());
                
                for ( Iterator i2 = element.elementIterator(); i2.hasNext(); ) {
                Element element2 = (Element) i2.next();
                    //Node is a game - parse game
                    if ("isLive".equals(element2.getName())) {
                        if ("false".equals((String)element2.getData())){ 
                            //If its not live dont show
                            break;
                        }
                    }
                    if ("team1".equals(element2.getName())) {
                        //Node is Team 1 - parse info
                        for (Iterator team1Iterator = element2.elementIterator(); team1Iterator.hasNext();) {
                            Element team1 = (Element) team1Iterator.next();
                            if ("name".equals((String)team1.getName())) {
                                Team1Name.setText((String)team1.getData());
                            }
                            if ("score".equals((String)team1.getName())) {
                                teamOneScore.setText((String)team1.getData());
                            }
                        }
                    }
                    if ("team2".equals(element2.getName())) {
                        //Node is Team 2 - parse info
                        for (Iterator team2Iterator = element2.elementIterator(); team2Iterator.hasNext();) {
                            Element team2 = (Element) team2Iterator.next();
                            if ("name".equals((String)team2.getName())) {
                                Team2Name.setText((String)team2.getData());
                            }
                            if ("score".equals((String)team2.getName())) {
                                teamTwoScore.setText((String)team2.getData());
                            }
                        }
                    }
                }
            }
         } catch (DocumentException e) {
             System.out.print(e.getMessage());
         }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Team1Name;
    private javax.swing.JLabel Team2Name;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel teamOneScore;
    private javax.swing.JLabel teamOneScore2;
    private javax.swing.JLabel teamTwoScore;
    // End of variables declaration//GEN-END:variables

}
